{
	"nodes": [
		{
			"name": "PTEvd",
			"code": "arrays.convolute",
			"inputs": {
				"kernel": "Array",
				"data": "Array"
			},
			"outputs": {
				"result": "Array"
			},
			"args": {},
			"desc": "Convolute two arrays.",
			"displayname": "Convolute",
			"x": -174,
			"y": -16
		},
		{
			"name": "rhf2N",
			"code": "default.splitflow",
			"inputs": {
				"val": "Object"
			},
			"outputs": {
				"right": "Object",
				"left": "Object"
			},
			"args": "",
			"desc": "Splits the flow.",
			"displayname": "Splitflow",
			"x": -344,
			"y": -179
		},
		{
			"name": "V2TzL",
			"code": "default.splitflow",
			"inputs": {
				"val": "Object"
			},
			"outputs": {
				"right": "Object",
				"left": "Object"
			},
			"args": "",
			"desc": "Splits the flow.",
			"displayname": "Splitflow",
			"x": 12,
			"y": -305
		},
		{
			"name": "eYa8O",
			"code": "arrays.gaussian",
			"inputs": {},
			"outputs": {
				"result": "Array"
			},
			"args": {
				"range": 400,
				"sigma": 100
			},
			"desc": "Executes the argument function as python code.",
			"displayname": "Gaussian Generator",
			"x": 11,
			"y": -420
		},
		{
			"name": "LmJTB",
			"code": "arrays.generate",
			"inputs": {},
			"outputs": {
				"result": "Array"
			},
			"args": {
				"range": 1000,
				"code": "n = float(max_x)\ny = x/n if x < n / 2 else (n - x) / n\n\n# Object in the data\ny = y - 0.1 if 200 < x < 400 else y\n\n# Noise in the data\nimport random\ny = y - random.random() * 0.2 + 0.1 if random.random() < 0.05 else y\ny = y - random.random()* 0.02 + 0.01",
				"repeating": true,
				"time": 5
			},
			"desc": "Executes the argument function as python code.",
			"displayname": "Array Generator",
			"x": -352,
			"y": -350
		},
		{
			"name": "JyFq1",
			"code": "matplotlib.plotarray",
			"inputs": {
				"data": "Array"
			},
			"outputs": {},
			"args": {
				"subplot": 222,
				"ion": true,
				"clear": true,
				"title": "Debug"
			},
			"desc": "Plot an array.",
			"displayname": "[WIP] Plot Array",
			"x": 267,
			"y": 27
		},
		{
			"name": "o9g7M",
			"code": "matplotlib.plotarray",
			"inputs": {
				"data": "Array"
			},
			"outputs": {},
			"args": {
				"subplot": 221,
				"ion": true,
				"clear": true,
				"title": "Debug"
			},
			"desc": "Plot an array.",
			"displayname": "[WIP] Plot Array",
			"x": -388,
			"y": -19
		},
		{
			"name": "Xz7vp",
			"code": "matplotlib.plotarray",
			"inputs": {
				"data": "Array"
			},
			"outputs": {},
			"args": {
				"subplot": 212,
				"ion": true,
				"clear": true,
				"title": "Debug"
			},
			"desc": "Plot an array.",
			"displayname": "[WIP] Plot Array",
			"x": -303,
			"y": 299
		},
		{
			"name": "9NeKg",
			"code": "arrays.convolute",
			"inputs": {
				"kernel": "Array",
				"data": "Array"
			},
			"outputs": {
				"result": "Array"
			},
			"args": {},
			"desc": "Convolute two arrays.",
			"displayname": "Convolute",
			"x": -20,
			"y": 260
		},
		{
			"name": "d3nV8",
			"code": "default.splitflow",
			"inputs": {
				"val": "Object"
			},
			"outputs": {
				"right": "Object",
				"left": "Object"
			},
			"args": "",
			"desc": "Splits the flow.",
			"displayname": "Splitflow",
			"x": -65,
			"y": -164
		},
		{
			"name": "VxBay",
			"code": "default.splitflow",
			"inputs": {
				"val": "Object"
			},
			"outputs": {
				"right": "Object",
				"left": "Object"
			},
			"args": "",
			"desc": "Splits the flow.",
			"displayname": "Splitflow",
			"x": -175,
			"y": 113
		},
		{
			"name": "IrkBv",
			"code": "matplotlib.plotarray",
			"inputs": {
				"data": "Array"
			},
			"outputs": {},
			"args": {
				"subplot": 212,
				"ion": true,
				"clear": false,
				"title": "Debug"
			},
			"desc": "Plot an array.",
			"displayname": "[WIP] Plot Array",
			"x": -7,
			"y": 398
		}
	],
	"connections": [
		{
			"input": {
				"node": "rhf2N",
				"output": "left"
			},
			"output": {
				"node": "PTEvd",
				"input": "data"
			}
		},
		{
			"input": {
				"node": "eYa8O",
				"output": "result"
			},
			"output": {
				"node": "V2TzL",
				"input": "val"
			}
		},
		{
			"input": {
				"node": "LmJTB",
				"output": "result"
			},
			"output": {
				"node": "rhf2N",
				"input": "val"
			}
		},
		{
			"input": {
				"node": "rhf2N",
				"output": "right"
			},
			"output": {
				"node": "o9g7M",
				"input": "data"
			}
		},
		{
			"input": {
				"node": "V2TzL",
				"output": "left"
			},
			"output": {
				"node": "JyFq1",
				"input": "data"
			}
		},
		{
			"input": {
				"node": "V2TzL",
				"output": "right"
			},
			"output": {
				"node": "d3nV8",
				"input": "val"
			}
		},
		{
			"input": {
				"node": "d3nV8",
				"output": "right"
			},
			"output": {
				"node": "PTEvd",
				"input": "kernel"
			}
		},
		{
			"input": {
				"node": "d3nV8",
				"output": "left"
			},
			"output": {
				"node": "9NeKg",
				"input": "kernel"
			}
		},
		{
			"input": {
				"node": "PTEvd",
				"output": "result"
			},
			"output": {
				"node": "VxBay",
				"input": "val"
			}
		},
		{
			"input": {
				"node": "VxBay",
				"output": "left"
			},
			"output": {
				"node": "9NeKg",
				"input": "data"
			}
		},
		{
			"input": {
				"node": "VxBay",
				"output": "right"
			},
			"output": {
				"node": "Xz7vp",
				"input": "data"
			}
		},
		{
			"input": {
				"node": "9NeKg",
				"output": "result"
			},
			"output": {
				"node": "IrkBv",
				"input": "data"
			}
		}
	]
}