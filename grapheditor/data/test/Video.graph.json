{
	"connections": [
		{
			"input": {
				"node": "2xUB5",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "o74HY"
			}
		},
		{
			"input": {
				"node": "o74HY",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "TNt3F"
			}
		},
		{
			"input": {
				"node": "TNt3F",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "fYg4m"
			}
		},
		{
			"input": {
				"node": "fYg4m",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "JKA7d"
			}
		},
		{
			"input": {
				"node": "JKA7d",
				"output": "left"
			},
			"output": {
				"input": "img",
				"node": "6NOzV"
			}
		},
		{
			"input": {
				"node": "JKA7d",
				"output": "right"
			},
			"output": {
				"input": "right",
				"node": "6kR9t"
			}
		},
		{
			"input": {
				"node": "6NOzV",
				"output": "result"
			},
			"output": {
				"input": "left",
				"node": "6kR9t"
			}
		},
		{
			"input": {
				"node": "jzZD2",
				"output": "result"
			},
			"output": {
				"input": "kernel",
				"node": "LA4j9"
			}
		},
		{
			"input": {
				"node": "1DTy8",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "6PFoF"
			}
		},
		{
			"input": {
				"node": "6kR9t",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "BlPhn"
			}
		},
		{
			"input": {
				"node": "BlPhn",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "JIoqi"
			}
		},
		{
			"input": {
				"node": "Ih0GC",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "N9L2C"
			}
		},
		{
			"input": {
				"node": "N9L2C",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "2xUB5"
			}
		},
		{
			"input": {
				"node": "JIoqi",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "uRuit"
			}
		},
		{
			"input": {
				"node": "uRuit",
				"output": "result"
			},
			"output": {
				"input": "img",
				"node": "1DTy8"
			}
		},
		{
			"input": {
				"node": "6PFoF",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "psJUe"
			}
		},
		{
			"input": {
				"node": "psJUe",
				"output": "result"
			},
			"output": {
				"input": "data",
				"node": "LA4j9"
			}
		},
		{
			"input": {
				"node": "LA4j9",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "5nKpC"
			}
		},
		{
			"input": {
				"node": "PYgKj",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "9OTIo"
			}
		},
		{
			"input": {
				"node": "9OTIo",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "Xay2D"
			}
		},
		{
			"input": {
				"node": "5nKpC",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "PYgKj"
			}
		},
		{
			"input": {
				"node": "Xay2D",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "mkUC8"
			}
		},
		{
			"input": {
				"node": "mkUC8",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "okSq4"
			}
		},
		{
			"input": {
				"node": "okSq4",
				"output": "result"
			},
			"output": {
				"input": "val",
				"node": "P61k0"
			}
		},
		{
			"input": {
				"node": "9Bdy7",
				"output": "result"
			},
			"output": {
				"node": "Ih0GC",
				"input": "img"
			}
		}
	],
	"nodes": [
		{
			"args": {
				"height": 240,
				"width": 320
			},
			"code": "extlib.computervision.resize",
			"desc": "Resize an image.",
			"displayname": "Resize",
			"inputs": {
				"img": "Image"
			},
			"name": "Ih0GC",
			"outputs": {
				"result": "Image"
			},
			"x": 203,
			"y": -509,
			"heat": 0,
			"running": 0
		},
		{
			"args": 10,
			"code": "extlib.computervision.medianblur",
			"desc": "Apply median blur on image.",
			"displayname": "Median Blur",
			"inputs": {
				"img": "Image"
			},
			"name": "2xUB5",
			"outputs": {
				"result": "Image"
			},
			"x": 176,
			"y": -284,
			"heat": 0,
			"running": 0
		},
		{
			"args": "",
			"code": "extlib.computervision.bgr2hsv",
			"desc": "Convert BGR image to HSV image.",
			"displayname": "BGR to HSV",
			"inputs": {
				"img": "Image"
			},
			"name": "o74HY",
			"outputs": {
				"result": "Image"
			},
			"x": 141,
			"y": -193,
			"heat": 0,
			"running": 0
		},
		{
			"args": 127,
			"code": "extlib.computervision.fixedintensity",
			"desc": "Set the intensity to a fixed value.",
			"displayname": "Fixed Intensity",
			"inputs": {
				"img": "Image"
			},
			"name": "TNt3F",
			"outputs": {
				"result": "Image"
			},
			"x": 96,
			"y": -105,
			"heat": 0,
			"running": 0
		},
		{
			"args": "",
			"code": "extlib.computervision.hsv2bgr",
			"desc": "Convert HSV image to BGR image.",
			"displayname": "HSV to BGR",
			"inputs": {
				"img": "Image"
			},
			"name": "fYg4m",
			"outputs": {
				"result": "Image"
			},
			"x": 62,
			"y": -11,
			"heat": 0,
			"running": 0
		},
		{
			"args": "",
			"code": "stdlib.default.splitflow",
			"desc": "Splits the flow.",
			"displayname": "Splitflow 2",
			"inputs": {
				"val": "Object"
			},
			"name": "JKA7d",
			"outputs": {
				"left": "Object",
				"right": "Object"
			},
			"x": 22,
			"y": 86,
			"heat": 0,
			"running": 0
		},
		{
			"args": 1,
			"code": "extlib.computervision.gaussianblur",
			"desc": "Apply gaussian blur on image.",
			"displayname": "Gaussian Blur",
			"inputs": {
				"img": "Image"
			},
			"name": "6NOzV",
			"outputs": {
				"result": "Image"
			},
			"x": 149,
			"y": 170,
			"heat": 0,
			"running": 0
		},
		{
			"args": {
				"left": -0.75,
				"right": 1.75
			},
			"code": "extlib.computervision.addweighted",
			"desc": "Add the two images weighted.",
			"displayname": "Add Weighted",
			"inputs": {
				"left": "Image",
				"right": "Image"
			},
			"name": "6kR9t",
			"outputs": {
				"result": "Image"
			},
			"x": 48,
			"y": 256,
			"heat": 0,
			"running": 0
		},
		{
			"args": "",
			"code": "extlib.computervision.bgr2hsv",
			"desc": "Convert BGR image to HSV image.",
			"displayname": "BGR to HSV",
			"inputs": {
				"img": "Image"
			},
			"name": "BlPhn",
			"outputs": {
				"result": "Image"
			},
			"x": 321,
			"y": 406,
			"heat": 0,
			"running": 0
		},
		{
			"args": "",
			"code": "extlib.computervision.img2distribution",
			"desc": "Convert an image to a distribution.",
			"displayname": "Image to distribution",
			"inputs": {
				"img": "Image"
			},
			"name": "6PFoF",
			"outputs": {
				"result": "Array"
			},
			"x": 410,
			"y": 792,
			"heat": 0,
			"running": 0
		},
		{
			"args": {
				"range": 10,
				"sigma": 2
			},
			"code": "stdlib.arrays.gaussian",
			"desc": "Executes the argument function as python code.",
			"displayname": "Gaussian Generator",
			"inputs": {},
			"name": "jzZD2",
			"outputs": {
				"result": "Array"
			},
			"x": 220,
			"y": 883,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.arrays.convolute",
			"desc": "Convolute two arrays.",
			"displayname": "Convolute",
			"inputs": {
				"data": "Array",
				"kernel": "Array"
			},
			"name": "LA4j9",
			"outputs": {
				"result": "Array"
			},
			"x": 419,
			"y": 1017,
			"heat": 0,
			"running": 0
		},
		{
			"args": {
				"height": 60,
				"width": 80
			},
			"code": "extlib.computervision.resize",
			"desc": "Resize an image.",
			"displayname": "Resize",
			"inputs": {
				"img": "Image"
			},
			"name": "1DTy8",
			"outputs": {
				"result": "Image"
			},
			"x": 377,
			"y": 697,
			"heat": 0,
			"running": 0
		},
		{
			"args": {
				"lower-hue": 0,
				"lower-saturisation": 0,
				"lower-value": 0,
				"upper-hue": 255,
				"upper-saturisation": 40,
				"upper-value": 255
			},
			"code": "extlib.computervision.inrange",
			"desc": "Apply an inRange operation on the image.",
			"displayname": "In Range",
			"inputs": {
				"img": "Image"
			},
			"name": "JIoqi",
			"outputs": {
				"result": "Image"
			},
			"x": 379,
			"y": 506,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.debug.view",
			"data": "image",
			"data_img": {},
			"data_str": "\n",
			"desc": "Views (in IDE) and passes the object.",
			"displayname": "View",
			"inputs": {
				"val": "Object"
			},
			"name": "N9L2C",
			"outputs": {
				"result": "Object"
			},
			"x": 186,
			"y": -399,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.debug.view",
			"data": "image",
			"data_img": {},
			"data_str": "iVBORw0KGgoAAAANSUhEUgAAAFAAAAA8CAAAAADUTGJQAAACCElEQVRYCaXB24EjIQxFwXMzE5EBkaGJTNsve2jcH/JslfgQZBTnkVjZIKM3HolVq2R44ZFYBTnikVgESeKRuBtGkngkboaRJR6JWaukiUdi1ipp4pG4CdJ644m4aZWs3ngi7oI08UTctUqWeCIWw0gST8QqSBJPxJ15kCSeiJvx04Ks4nwSqyBNfBKrYWQV54NYBXnig1gFXxArsQq+IFZiYYO83liJVZBXnJVYBV8QK/GhVdLESnyyQZpYiIs5G3M2Nkgrzo042BCTYaSJG3EIcTBnZ4O03piJnVljF71xCtLETMyC3jgESTJnJibD8MKhVXJ640ZMAi9cghwv3Ig3G4AXTq2SI27EW7DrjUOr5PTGTLwEJ3EKkoozES/BRRyCLDERl+DFC6cgSfwSl+BNnIxBjngTl+CXeDEfRoJ4EadWmYg3GyQU5yJOARSrXMSLDTLERZwCeoPgIqBVBEGKOIlDqyB2walT2QiCjOIcxCGA3ti0yqx4q6SIg9jZYCN2wY0IckotgNhFr0BvbGww640gqbsjdsHOC7vgRgwjq7iAVjl4x4HgTkGa/wholUtxYBh/5l2cWmVTajEG/0NcrBoIc8YPlT8TbwHiMIy/cvFmo1hjZ4PvuRU3Q/wahUvwB17YiMMwMQn+QOzExqohJsH3vLATOxti1irfEzvxwKzyPS9s/gH3LaE6XlY6xwAAAABJRU5ErkJggg==\n",
			"desc": "Views (in IDE) and passes the object.",
			"displayname": "View",
			"inputs": {
				"val": "Object"
			},
			"name": "uRuit",
			"outputs": {
				"result": "Object"
			},
			"x": 447,
			"y": 606,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.debug.view",
			"data": [
				[
					0,
					0
				],
				[
					1,
					0
				],
				[
					2,
					0
				],
				[
					3,
					0
				],
				[
					4,
					0
				],
				[
					5,
					0.037369791666666666
				],
				[
					6,
					0.04153645833333333
				],
				[
					7,
					0.053971354166666666
				],
				[
					8,
					0.14947916666666666
				],
				[
					9,
					0.23248697916666666
				],
				[
					10,
					0.32376302083333336
				],
				[
					11,
					0.28639322916666665
				],
				[
					12,
					0.27395833333333336
				],
				[
					13,
					0.22825520833333332
				],
				[
					14,
					0.21998697916666668
				],
				[
					15,
					0.2822265625
				],
				[
					16,
					0.26979166666666665
				],
				[
					17,
					0.3487630208333333
				],
				[
					18,
					0.5852213541666667
				],
				[
					19,
					0.6225911458333333
				],
				[
					20,
					0.5686197916666667
				],
				[
					21,
					0.6018229166666667
				],
				[
					22,
					0.7388020833333333
				],
				[
					23,
					0.8093098958333333
				],
				[
					24,
					0.8384114583333333
				],
				[
					25,
					0.8633463541666667
				],
				[
					26,
					0.8965494791666667
				],
				[
					27,
					0.9048177083333333
				],
				[
					28,
					0.9255208333333333
				],
				[
					29,
					0.9296875
				],
				[
					30,
					0.9380208333333333
				],
				[
					31,
					0.9255208333333333
				],
				[
					32,
					0.9172526041666667
				],
				[
					33,
					0.9089192708333333
				],
				[
					34,
					0.9296875
				],
				[
					35,
					0.9794921875
				],
				[
					36,
					0.9919270833333333
				],
				[
					37,
					0.99609375
				],
				[
					38,
					0.99609375
				],
				[
					39,
					0.99609375
				],
				[
					40,
					0.99609375
				],
				[
					41,
					0.99609375
				],
				[
					42,
					0.99609375
				],
				[
					43,
					0.99609375
				],
				[
					44,
					0.99609375
				],
				[
					45,
					0.99609375
				],
				[
					46,
					0.99609375
				],
				[
					47,
					0.99609375
				],
				[
					48,
					0.99609375
				],
				[
					49,
					0.99609375
				],
				[
					50,
					0.99609375
				],
				[
					51,
					0.99609375
				],
				[
					52,
					0.99609375
				],
				[
					53,
					0.99609375
				],
				[
					54,
					0.99609375
				],
				[
					55,
					0.99609375
				],
				[
					56,
					0.9380208333333333
				],
				[
					57,
					0.8218098958333333
				],
				[
					58,
					0.7720052083333333
				],
				[
					59,
					0.7014322916666667
				],
				[
					60,
					0.6640625
				],
				[
					61,
					0.630859375
				],
				[
					62,
					0.6018229166666667
				],
				[
					63,
					0.5934895833333333
				],
				[
					64,
					0.5022786458333334
				],
				[
					65,
					0.46484375
				],
				[
					66,
					0.45240885416666665
				],
				[
					67,
					0.42337239583333336
				],
				[
					68,
					0.40260416666666665
				],
				[
					69,
					0.39016927083333336
				],
				[
					70,
					0.36106770833333335
				],
				[
					71,
					0.34446614583333335
				],
				[
					72,
					0.33203125
				],
				[
					73,
					0.25735677083333336
				],
				[
					74,
					0.232421875
				],
				[
					75,
					0.22415364583333333
				],
				[
					76,
					0.18678385416666668
				],
				[
					77,
					0.15768229166666667
				],
				[
					78,
					0.14947916666666666
				],
				[
					79,
					0.1494140625
				]
			],
			"desc": "Views (in IDE) and passes the object.",
			"displayname": "View",
			"inputs": {
				"val": "Object"
			},
			"name": "psJUe",
			"outputs": {
				"result": "Object"
			},
			"x": 448,
			"y": 881,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.debug.view",
			"data": [
				[
					0,
					0.003841567310122887
				],
				[
					1,
					0.010955639477024213
				],
				[
					2,
					0.02495221289110915
				],
				[
					3,
					0.04777998323447943
				],
				[
					4,
					0.07844336097136484
				],
				[
					5,
					0.11340376476209094
				],
				[
					6,
					0.14941817753203737
				],
				[
					7,
					0.1856436976399742
				],
				[
					8,
					0.2236525174159971
				],
				[
					9,
					0.2640433744087985
				],
				[
					10,
					0.30422216285620596
				],
				[
					11,
					0.3373937425845194
				],
				[
					12,
					0.35626655615496405
				],
				[
					13,
					0.3587112664586033
				],
				[
					14,
					0.3513407768600653
				],
				[
					15,
					0.345108707725168
				],
				[
					16,
					0.3482800496248704
				],
				[
					17,
					0.36346851156112336
				],
				[
					18,
					0.388524782947498
				],
				[
					19,
					0.4194935195524515
				],
				[
					20,
					0.454228806214102
				],
				[
					21,
					0.4928830241573763
				],
				[
					22,
					0.537516784111543
				],
				[
					23,
					0.589071922426431
				],
				[
					24,
					0.6454957414537879
				],
				[
					25,
					0.7026373869594861
				],
				[
					26,
					0.756195022296723
				],
				[
					27,
					0.8027981313288536
				],
				[
					28,
					0.8407141340854711
				],
				[
					29,
					0.8703467898253853
				],
				[
					30,
					0.8926714060121927
				],
				[
					31,
					0.9085434277274362
				],
				[
					32,
					0.9200411331679658
				],
				[
					33,
					0.930067885774626
				],
				[
					34,
					0.941199340609295
				],
				[
					35,
					0.9539101553726785
				],
				[
					36,
					0.966571847319496
				],
				[
					37,
					0.9770963608648842
				],
				[
					38,
					0.9842123534303071
				],
				[
					39,
					0.9881822249285186
				],
				[
					40,
					0.9899564693592877
				],
				[
					41,
					0.9905136178571763
				],
				[
					42,
					0.9906591164452576
				],
				[
					43,
					0.9906591164452576
				],
				[
					44,
					0.9906591164452576
				],
				[
					45,
					0.9906591164452576
				],
				[
					46,
					0.9906591164452576
				],
				[
					47,
					0.9906591164452576
				],
				[
					48,
					0.9906591164452576
				],
				[
					49,
					0.9906591164452576
				],
				[
					50,
					0.9906591164452576
				],
				[
					51,
					0.9905136178571763
				],
				[
					52,
					0.9893385282969657
				],
				[
					53,
					0.9855148222236141
				],
				[
					54,
					0.9760919584821861
				],
				[
					55,
					0.9575110204892218
				],
				[
					56,
					0.9275067121263662
				],
				[
					57,
					0.8871597871033375
				],
				[
					58,
					0.8403656647424811
				],
				[
					59,
					0.7921294089134351
				],
				[
					60,
					0.7458240695030138
				],
				[
					61,
					0.7021842565393113
				],
				[
					62,
					0.6610381073520891
				],
				[
					63,
					0.6229729915552913
				],
				[
					64,
					0.5892023386512627
				],
				[
					65,
					0.56057213432058
				],
				[
					66,
					0.5362124251840179
				],
				[
					67,
					0.513791373434811
				],
				[
					68,
					0.49128380607347005
				],
				[
					69,
					0.46754803120435773
				],
				[
					70,
					0.44177054865904064
				],
				[
					71,
					0.41370230436240807
				],
				[
					72,
					0.3841280022991373
				],
				[
					73,
					0.3541893370016837
				],
				[
					74,
					0.3246779772424987
				],
				[
					75,
					0.294002297469109
				],
				[
					76,
					0.2599126219021884
				],
				[
					77,
					0.2197592843299135
				],
				[
					78,
					0.173056307153629
				],
				[
					79,
					0.12294395223781247
				]
			],
			"desc": "Views (in IDE) and passes the object.",
			"displayname": "View",
			"inputs": {
				"val": "Object"
			},
			"name": "5nKpC",
			"outputs": {
				"result": "Object"
			},
			"x": 449,
			"y": 1156,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.debug.view",
			"data": [
				[
					0,
					0
				],
				[
					0,
					0
				],
				[
					0.00003412029912531215,
					0.000013012219386666384
				],
				[
					0.0016401531356890979,
					0.0006071178892096194
				],
				[
					0.006675659418185254,
					0.002396806638221321
				],
				[
					0.018867954277853347,
					0.006565901667204997
				],
				[
					0.04203479535937506,
					0.014166692956765006
				],
				[
					0.07700247667133657,
					0.0251125187284062
				],
				[
					0.11952342685950534,
					0.0376855917314678
				],
				[
					0.16367462953543474,
					0.049845191230609674
				],
				[
					0.2055560447911296,
					0.060400986553959424
				],
				[
					0.24672893877113916,
					0.06987539392663067
				],
				[
					0.2891636271770785,
					0.07883505323392447
				],
				[
					0.3311029075566522,
					0.08678601908337599
				],
				[
					0.3651764429707682,
					0.09189539240093537
				],
				[
					0.3850392610315554,
					0.0928840858169623
				],
				[
					0.390116529073197,
					0.09006549739531212
				],
				[
					0.3860912807050696,
					0.08515262322134946
				],
				[
					0.38133075068821476,
					0.08018523318809387
				],
				[
					0.38156139179891285,
					0.0763300609029044
				],
				[
					0.3875150382621022,
					0.07357202879459908
				],
				[
					0.39829819077515194,
					0.07157545107183182
				],
				[
					0.4135825648519585,
					0.07013789041817214
				],
				[
					0.4384044781599228,
					0.06992675449250102
				],
				[
					0.480269538889196,
					0.0717767635044742
				],
				[
					0.5445467632638502,
					0.07592540819045873
				],
				[
					0.6272672010775353,
					0.08118948738327143
				],
				[
					0.7151761081005912,
					0.08543783767450562
				],
				[
					0.794148175212114,
					0.08697337030147012
				],
				[
					0.8540415732601012,
					0.08505650654108887
				],
				[
					0.8925563567009082,
					0.08005110118708329
				],
				[
					0.9125925288582777,
					0.0728243260624158
				],
				[
					0.9202231791675582,
					0.06434827319570913
				],
				[
					0.9230878418778997,
					0.05544783863187259
				],
				[
					0.9275417559119995,
					0.046581492258614667
				],
				[
					0.9365439470625586,
					0.03782014419813809
				],
				[
					0.948593699569692,
					0.0289821587694855
				],
				[
					0.9607814093777131,
					0.019915800541926047
				],
				[
					0.9709359303404338,
					0.010591688115625376
				],
				[
					0.9782668591626819,
					0.0010671240267319556
				],
				[
					0.9834121062416635,
					-0.008582107435002645
				],
				[
					0.9866693285866714,
					-0.018299015318769714
				],
				[
					0.9885502275117373,
					-0.028044386328142042
				],
				[
					0.9893057260557293,
					-0.03778914267256239
				],
				[
					0.989337023674732,
					-0.04752126500382084
				],
				[
					0.9890039572056414,
					-0.05724209663945136
				],
				[
					0.9883943321334775,
					-0.0669487057568365
				],
				[
					0.9876894435583939,
					-0.0766488622186175
				],
				[
					0.9868893594190188,
					-0.08634163110352522
				],
				[
					0.9859941568291266,
					-0.09602607820232056
				],
				[
					0.9850039220702063,
					-0.10570127010783545
				],
				[
					0.9839187505831447,
					-0.11536627430493661
				],
				[
					0.981908960376842,
					-0.12491459707413764
				],
				[
					0.9778305895245731,
					-0.1341634681825816
				],
				[
					0.9691441627227096,
					-0.14267869696754845
				],
				[
					0.9527089320829901,
					-0.14982914027390012
				],
				[
					0.9265449546418609,
					-0.15505045014099453
				],
				[
					0.8913719616015054,
					-0.1581756870195651
				],
				[
					0.8504479063427436,
					-0.15954110526049167
				],
				[
					0.8077859737784672,
					-0.1597627969221645
				],
				[
					0.7660202548169642,
					-0.15933244214275027
				],
				[
					0.7260588647341862,
					-0.15847237333546424
				],
				[
					0.6882554694925485,
					-0.15731551617065506
				],
				[
					0.6535514809101084,
					-0.1561500207644288
				],
				[
					0.6224091341363006,
					-0.1551840263655572
				],
				[
					0.5949276419078545,
					-0.15455131544248715
				],
				[
					0.5699808184251691,
					-0.15405946658700564
				],
				[
					0.5458397639625169,
					-0.15330015339081307
				],
				[
					0.5212590326517159,
					-0.15193315273713173
				],
				[
					0.4948960917690886,
					-0.14953575867596983
				],
				[
					0.4660416914211413,
					-0.14582532422283784
				],
				[
					0.4341932307074686,
					-0.14055448401461607
				],
				[
					0.39877058544402777,
					-0.13342677144467324
				],
				[
					0.3589864813566926,
					-0.12404714450641557
				],
				[
					0.31468170987823624,
					-0.11220785619527282
				],
				[
					0.2662239481437814,
					-0.09788540243743968
				],
				[
					0.2161262340185076,
					-0.08188290526956479
				],
				[
					0.1672755338974945,
					-0.06526005024846361
				],
				[
					0.12208649625860095,
					-0.04901658880308523
				],
				[
					0.08219535669220378,
					-0.03394143424652135
				]
			],
			"desc": "Views (in IDE) and passes the object.",
			"displayname": "View",
			"inputs": {
				"val": "Object"
			},
			"name": "Xay2D",
			"outputs": {
				"result": "Object"
			},
			"x": 450,
			"y": 1434,
			"heat": 0,
			"running": 0
		},
		{
			"args": {
				"center": 0,
				"total_degree": 45
			},
			"code": "extlib.geometry.arraytopolar",
			"desc": "Transpose points.",
			"displayname": "Array 2 Polar",
			"inputs": {
				"val": "Array"
			},
			"name": "PYgKj",
			"outputs": {
				"result": "PointArray"
			},
			"x": 355,
			"y": 1252,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "extlib.geometry.polartoeuler",
			"desc": "Convert display style.",
			"displayname": "Polar 2 Euler",
			"inputs": {
				"val": "PointArray"
			},
			"name": "9OTIo",
			"outputs": {
				"result": "PointArray"
			},
			"x": 394,
			"y": 1338,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "extlib.geometry.centerpoint",
			"desc": "Calculates average for polygon.",
			"displayname": "Centerpoint",
			"inputs": {
				"val": "Polygon"
			},
			"name": "mkUC8",
			"outputs": {
				"result": "Point"
			},
			"x": 396,
			"y": 1532,
			"heat": 0,
			"running": 0
		},
		{
			"args": {},
			"code": "stdlib.debug.view",
			"data": [
				[
					[
						0.5228130206164334,
						-0.04212539314466928
					],
					[
						0.5228130206164334,
						-0.04212539314466928
					],
					[
						0.5136493733236047,
						-0.043509840459727354
					],
					[
						0.5061185133009443,
						-0.03955520582431375
					],
					[
						0.5217571637816878,
						-0.04492822457013049
					],
					[
						0.5272480455335419,
						-0.03813546512480154
					],
					[
						0.5333767585903468,
						-0.0365916369713189
					],
					[
						0.5389405921775637,
						-0.03657046980071379
					],
					[
						0.547987208619806,
						-0.03397430025020345
					],
					[
						0.5913889624712702,
						-0.029551297711424323
					]
				]
			],
			"desc": "Views (in IDE) and passes the object.",
			"displayname": "View",
			"inputs": {
				"val": "Object"
			},
			"name": "P61k0",
			"outputs": {
				"result": "Object"
			},
			"x": 449,
			"y": 1720,
			"heat": 0,
			"running": 0
		},
		{
			"args": {
				"max_length": 100,
				"threshold": 10
			},
			"code": "extlib.geometry.track",
			"desc": "Track points.",
			"displayname": "Track",
			"inputs": {
				"val": "PointArray"
			},
			"name": "okSq4",
			"outputs": {
				"result": "PolygonArray"
			},
			"x": 415,
			"y": 1625,
			"heat": 0,
			"running": 0
		},
		{
			"name": "9Bdy7",
			"code": "extlib.computervision.video",
			"inputs": {},
			"outputs": {
				"result": "Image"
			},
			"args": {
				"resource": "/home/michael/Videos/Robotour/2016_fisheye_otto_dullenkopf_01.mp4",
				"fps": 30,
				"exposure": 0
			},
			"desc": "Capture video.",
			"displayname": "Video",
			"heat": 0,
			"running": 0,
			"x": 283.81892704245735,
			"y": -628.9323784632395
		}
	]
}